<launch>
    <arg name="search_directly" default="false"/>
    <arg name="vocabulary_path" default="/home/strands/.semanticMap/vocabulary"/>
    <arg name="enable_incremental" default="false"/>
    <arg name="soma_filtering" default="false"/>

    <group if="$(arg soma_filtering)">
        <node pkg="quasimodo_retrieval" type="quasimodo_filtering_node" name="quasimodo_filtering_node" output="screen" respawn="true">
            <param name="raw_service_name" value="/raw_quasimodo_retrieval_service"/>
            <param name="filtered_service_name" value="/quasimodo_retrieval_service"/>
        </node>
    </group>

    <node pkg="surfelize_it" type="topic_processor" name="topic_processor" output="screen" respawn="true"/>
    <node pkg="quasimodo_retrieval" type="quasimodo_retrieval_node" name="quasimodo_retrieval_node" output="screen" respawn="true">
        <param name="vocabulary_path" value="$(arg vocabulary_path)"/>
        <param name="enable_incremental" value="$(arg enable_incremental)"/>
        <param name="service_name" value="/quasimodo_retrieval_service" unless="$(arg soma_filtering)"/>
        <param name="service_name" value="/raw_quasimodo_retrieval_service" if="$(arg soma_filtering)"/>
    </node>
    <node pkg="quasimodo_retrieval" type="quasimodo_visualization_server" name="quasimodo_visualization_server" output="screen" respawn="true"/>
    <node pkg="quasimodo_retrieval" type="quasimodo_logging_server" name="quasimodo_logging_server" output="screen" respawn="true"/>
    <group if="$(arg search_directly)">
        <node pkg="quasimodo_retrieval" type="quasimodo_retrieve_observation" name="quasimodo_retrieve_observation" output="screen" respawn="true"/>
    </group>
</launch>
